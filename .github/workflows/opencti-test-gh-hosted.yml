name: OpenCTI CI GitHub hosted api-test
on:
  workflow_dispatch:
  push:
    branches:
      - oob/ci-split-test

jobs:
  Job-OpenCTI-CI:
    runs-on: ubuntu-latest
    steps:
    - name: Display Runner Information
      continue-on-error: true
      run: |
          set -x
          echo "Runner Name: $RUNNER_NAME"
          echo "Runner OS: $RUNNER_OS \t Runner Arch: $RUNNER_ARCH"
          echo "Workflow: ${{ github.workflow }} \t Run ID: ${{ github.run_id }} \t Run Number: ${{ github.run_number }}"
          echo "Workspace  GITHUB_WORKSPACE =  ${GITHUB_WORKSPACE} "
          tree  ${{ github.workspace }}/..
          echo " pwd $(pwd) " 
          ls -larth
          ps aux | sort -nk +4 | tail -5
          env
          free -m
          docker stats --no-stream

    - name: OpenCTI checkout
      uses: actions/checkout@v4

    - name: Set up Docker Compose for backends
      run: |
         cd opencti-platform/opencti-ci         
         docker network create runner-docker-network
         docker compose up -d


    - name: Run the dependency checkout with docker run
      run: |
        docker run \
          --name depndency-checkout \
          -v ${{ github.workspace }}:${{ github.workspace }} \
          -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
          -e GITHUB_REF_NAME=${GITHUB_REF_NAME} \
          -e GITHUB_BASE_REF=${GITHUB_BASE_REF} \
          -e GITHUB_PR_NUMBER=${{ github.event.pull_request.number }} \
          nikolaik/python-nodejs:python3.11-nodejs22-alpine \
          sh -c 'set -x
            echo "$(date) dependencies-checkout in github.workspace  = ${{ github.workspace }}" 
            ls  ${{ github.workspace }} -larth  2>/dev/null || true 
            cd ${{ github.workspace }}
            cp -R opencti-platform platform-reference  
            apk add git github-cli 
            chmod 777 scripts/*   
            git config --global --add safe.directory ${{ github.workspace }} 
            echo Launching clonde-dependencies.sh   "${GITHUB_REF_NAME}" "${GITHUB_BASE_REF}" "$(pwd)" "${GITHUB_PR_NUMBER}" 
            ./scripts/clone-dependencies.sh  "${GITHUB_REF_NAME}" "${GITHUB_BASE_REF}" "$(pwd)" "${GITHUB_PR_NUMBER}" 
            ls -lart 
            cd client-python 
            echo "[INFO] using client-python on branch $(git branch --show-current)" 
            git log -n 1 
            '

    - name: Start OpenCTI sync instances
      run: |
        docker run -d \
          --name opencti-raw-start \
          -v "${{ github.workspace }}:/home/workspace" \
          -p 4100:4100 \
          --network runner-docker-network \
          nikolaik/python-nodejs:python3.11-nodejs22-alpine \
          sh -c '/home/workspace/opencti-platform/opencti-ci/start-opencti-instance.sh raw'
        docker run -d \
          --name opencti-live-start \
          -v "${{ github.workspace }}:/home/workspace" \
          -p 4200:4100 \
          --network runner-docker-network \
          nikolaik/python-nodejs:python3.11-nodejs22-alpine \
          sh -c '/home/workspace/opencti-platform/opencti-ci/start-opencti-instance.sh live'
        docker run -d \
          --name opencti-direct-start \
          -v "${{ github.workspace }}:/home/workspace" \
          -p 4300:4100 \
          --network runner-docker-network \
          nikolaik/python-nodejs:python3.11-nodejs22-alpine \
          sh -c '/home/workspace/opencti-platform/opencti-ci/start-opencti-instance.sh direct'
        docker run -d \
          --name opencti-restore-start \
          -v "${{ github.workspace }}:/home/workspace" \
          -p 4400:4100 \
          --network runner-docker-network \
          nikolaik/python-nodejs:python3.11-nodejs22-alpine \
          sh -c '/home/workspace/opencti-platform/opencti-ci/start-opencti-instance.sh restore'

    - name: Log backend start
      continue-on-error: true
      run: |
          sleep 10;
          echo -e "\n *********\n ********* logs Minio "; sleep 2
          docker logs $(docker ps -a --format '{{.ID}} {{.Image}}' | grep minio | awk '{print $1}')
          echo -e "\n *********\n ********* logs Elastic search "; sleep 2
          docker logs $(docker ps -a --format '{{.ID}} {{.Image}}' | grep elastic | awk '{print $1}')
          echo -e "\n *********\n ********* logs RabbitMQ "; sleep 2
          docker logs $(docker ps -a --format '{{.ID}} {{.Image}}' | grep rabbit | awk '{print $1}')
          echo -e "\n *********\n ********* logs Redis "; sleep 2
          docker logs $(docker ps -a --format '{{.ID}} {{.Image}}' | grep redis | awk '{print $1}')

    - name: Memory, container and process infos
      continue-on-error: true
      run: |
          echo -e "\n *********\n ********* docker ps"
          docker ps -a
          echo -e "\n *********\n ********* docker stat"
          docker stats --no-stream        
          echo -e "\n *********\n ********* docker network"
          docker network inspect runner-docker-network
          echo -e "\n *********\n ********* ps"
          ps aux | sort -nk +4 | tail -10
          echo -e "\n *********\n ********* free memory"
          free -m
        

    - name: Wait for OpenCTI sync instances to start
      continue-on-error: true
      run: |
          set -x
          echo "$(date)"  
          cd opencti-platform/opencti-ci
          ./wait-for-opencsti-instance-startup.sh http://localhost:4100/health?health_access_key=cihealthkey 300 10
          ./wait-for-opencsti-instance-startup.sh http://localhost:4200/health?health_access_key=cihealthkey 180 10
          ./wait-for-opencsti-instance-startup.sh http://localhost:4300/health?health_access_key=cihealthkey 180 10
          ./wait-for-opencsti-instance-startup.sh http://localhost:4400/health?health_access_key=cihealthkey 180 10
        

    - name: Logs opencti live start
      continue-on-error: true
      run: |
          echo "$(date)"  
          docker logs opencti-live-start
    - name: Logs opencti live start
      continue-on-error: true
      run: |
          echo "$(date)"  
          docker logs opencti-live-start
    - name: Logs opencti live start
      continue-on-error: true
      run: |
          echo "$(date)"  
          docker logs opencti-live-start
    - name: Logs opencti live start
      continue-on-error: true
      run: |
          echo "$(date)"  
          docker logs opencti-live-start

    - name: Memory, container and process infos
      continue-on-error: true
      run: |
          echo -e "\n *********\n ********* docker ps"
          docker ps -a
          echo -e "\n *********\n ********* docker stat"
          docker stats --no-stream        
          echo -e "\n *********\n ********* ps"
          ps aux | sort -nk +4 | tail -10
          echo -e "\n *********\n ********* free memory"
          free -m