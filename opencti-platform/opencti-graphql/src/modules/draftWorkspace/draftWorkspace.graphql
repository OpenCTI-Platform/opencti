# Type
type DraftWorkspace implements InternalObject & BasicObject {
    id: ID!
    entity_type: String!
    standard_id: String!
    parent_types: [String!]!
    # DraftWorkspace
    name: String!
    created_at: DateTime!
    creators: [Creator!]
    entity_id: String
}

# Ordering
enum DraftWorkspacesOrdering {
    name
    created_at
    creator
}

# Relay connections
type DraftWorkspaceConnection {
    pageInfo: PageInfo!
    edges: [DraftWorkspaceEdge!]!
}

type DraftWorkspaceEdge {
    cursor: String!
    node: DraftWorkspace!
}

# Queries
type Query {
    draftWorkspace(id: String!): DraftWorkspace @auth(for: [KNOWLEDGE])
    draftWorkspaces(
        first: Int
        after: ID
        orderBy: DraftWorkspacesOrdering
        orderMode: OrderingMode
        filters: FilterGroup
        search: String
    ): DraftWorkspaceConnection @auth(for: [KNOWLEDGE])
    draftWorkspaceEntities(
        draftId: String!,
        types: [String]
        first: Int
        after: ID
        orderBy: StixCoreObjectsOrdering
        orderMode: OrderingMode
        filters: FilterGroup
        search: String
    ): StixCoreObjectConnection @auth(for: [KNOWLEDGE])
    draftWorkspaceRelationships(
        draftId: String!,
        types: [String]
        first: Int
        after: ID
        orderBy: StixRelationshipsOrdering
        orderMode: OrderingMode
        filters: FilterGroup
        search: String
    ): StixRelationshipConnection @auth(for: [KNOWLEDGE])
}

input DraftWorkspaceAddInput {
    name: String!
    entity_id: String
}

type Mutation {
    draftWorkspaceAdd(input: DraftWorkspaceAddInput!): DraftWorkspace @auth(for: [KNOWLEDGE])
    draftWorkspaceValidate(id: ID!): Work @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
    draftWorkspaceDelete(id: ID!): ID @auth(for: [KNOWLEDGE])
}