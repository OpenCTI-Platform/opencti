type IngestionRss implements InternalObject & BasicObject {
    id: ID!
    entity_type: String!
    standard_id: String!
    parent_types: [String!]!
    created_at: DateTime
    updated_at: DateTime
    name: String!
    description: String
    uri: String!
    user: Creator
    defaultCreatedBy: Identity
    defaultMarkingDefinitions: [MarkingDefinition]
    report_types: [String!]
    current_state_date: DateTime
    last_execution_date: DateTime
    ingestion_running: Boolean
}
enum IngestionRssOrdering {
    name
    created_at
    updated_at
    uri
    _score
}
type IngestionRssConnection {
    pageInfo: PageInfo!
    edges: [IngestionRssEdge!]!
}
type IngestionRssEdge {
    cursor: String!
    node: IngestionRss!
}

# Queries
type Query {
    ingestionRss(id: String!): IngestionRss @auth(for: [INGESTION])
    ingestionRsss(
        first: Int
        after: ID
        orderBy: IngestionRssOrdering
        orderMode: OrderingMode
        filters: FilterGroup
        includeAuthorities: Boolean
        search: String
    ): IngestionRssConnection @auth(for: [INGESTION])
}

# Mutations
input IngestionRssAddInput {
    name: String! @constraint(minLength: 2, format: "not-blank")
    description: String
    uri: String! @constraint(minLength: 5)
    current_state_date: DateTime
    ingestion_running: Boolean
    # Data configuration
    user_id: String
    created_by_ref: String
    object_marking_refs: [String!]
    report_types: [String!]
}

type Mutation {
    ingestionRssAdd(input: IngestionRssAddInput!): IngestionRss @auth(for: [INGESTION_SETINGESTIONS])
    ingestionRssDelete(id: ID!): ID @auth(for: [INGESTION_SETINGESTIONS])
    ingestionRssFieldPatch(id: ID!, input: [EditInput!]!): IngestionRss @auth(for: [INGESTION_SETINGESTIONS])
}
