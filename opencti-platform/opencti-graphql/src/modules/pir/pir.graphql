type PIRCriterion {
    id: ID!
    filters: String!
    weight: Int!
}

type PIR implements InternalObject & BasicObject {
    id: ID!
    entity_type: String!
    standard_id: String!
    parent_types: [String!]!
    # PIR
    name: String!
    pirCriteria: [PIRCriterion!]!
    pirFilters: String!
    created_at: DateTime!
    updated_at: DateTime!
    creators: [Creator!]
}

# Ordering
enum PIROrdering {
    name
    created_at
    updated_at
    creator
}

# Relay connections
type PIRConnection {
    pageInfo: PageInfo!
    edges: [PIREdge!]!
}
type PIREdge {
    cursor: String!
    node: PIR!
}

# Queries
type Query {
    pir(id: ID!): PIR @auth(for: [KNOWLEDGE])
    pirs(
        first: Int
        after: ID
        orderBy: PIROrdering
        orderMode: OrderingMode
        filters: FilterGroup
        search: String
    ): PIRConnection @auth(for: [KNOWLEDGE])
}

input PIRCriterionInput {
    weight: Int!
    filters: String!
}

input PIRAddInput {
    name: String! @constraint(minLength: 2, format: "not-blank")
    pirCriteria: [PIRCriterionInput!]!
    pirFilters: String!
}

# Mutations
type Mutation {
    pirAdd(input: PIRAddInput!): PIR @auth(for: [KNOWLEDGE])
}