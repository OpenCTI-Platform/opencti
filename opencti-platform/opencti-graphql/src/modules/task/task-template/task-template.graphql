type TaskTemplate implements InternalObject & BasicObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  created: DateTime
  modified: DateTime
  name: String!
  description: String
}

# Ordering
enum TaskTemplatesOrdering {
  name
  description
  created
  modified
  created_at
  updated_at
  creator
  _score
}

type TaskTemplateConnection {
  pageInfo: PageInfo!
  edges: [TaskTemplateEdge!]!
}
type TaskTemplateEdge {
  cursor: String!
  node: TaskTemplate!
}

# Queries
type Query {
  taskTemplate(id: String!): TaskTemplate @auth(for: [SETTINGS_SETCASETEMPLATES])
  taskTemplates(
    first: Int
    after: ID
    orderBy: TaskTemplatesOrdering
    orderMode: OrderingMode
    filters: FilterGroup
    search: String
    toStix: Boolean
  ): TaskTemplateConnection @auth(for: [SETTINGS_SETCASETEMPLATES])
}

# Mutations
input TaskTemplateAddInput {
  name: String! @constraint(minLength: 2, format: "not-blank")
  description: String
}

type Mutation {
  taskTemplateAdd(input: TaskTemplateAddInput!): TaskTemplate @auth(for: [SETTINGS_SETCASETEMPLATES])
  taskTemplateDelete(id: ID!): ID @auth(for: [SETTINGS_SETCASETEMPLATES])
  taskTemplateFieldPatch(id: ID!, input: [EditInput!]!, commitMessage: String, references: [String]): TaskTemplate @auth(for: [SETTINGS_SETCASETEMPLATES])
}
