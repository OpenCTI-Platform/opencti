enum VocabularyCategory {
  account_type_ov
  attack_motivation_ov
  attack_resource_level_ov
  case_severity_ov
  case_priority_ov
  channel_types_ov
  collection_layers_ov
  event_type_ov
  grouping_context_ov
  implementation_language_ov
  incident_response_types_ov
  incident_type_ov
  incident_severity_ov
  indicator_type_ov
  infrastructure_type_ov
  integrity_level_ov
  malware_capabilities_ov
  malware_result_ov
  malware_type_ov
  platforms_ov
  opinion_ov
  organization_type_ov
  pattern_type_ov
  permissions_ov
  processor_architecture_ov
  reliability_ov
  report_types_ov
  request_for_information_types_ov
  request_for_takedown_types_ov
  service_status_ov
  service_type_ov
  start_type_ov
  threat_actor_group_type_ov
  threat_actor_group_role_ov
  threat_actor_group_sophistication_ov
  threat_actor_individual_type_ov
  threat_actor_individual_role_ov
  threat_actor_individual_sophistication_ov
  tool_types_ov
  note_types_ov
  gender_ov
  marital_status_ov
  hair_color_ov
  eye_color_ov
  persona_type_ov
}

type VocabularyFieldDefinition {
  key: String!
  required: Boolean!
  multiple: Boolean!
}

type VocabularyDefinition {
  key: VocabularyCategory!
  description: String
  entity_types: [String!]!
  fields: [VocabularyFieldDefinition!]!
}

type Vocabulary implements BasicObject & StixObject & StixMetaObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  representative: Representative!
  creators: [Creator!]
  x_opencti_stix_ids: [StixId]
  is_inferred: Boolean!
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  draftVersion: DraftVersion
  # inferences
  x_opencti_inferences: [Inference]
  # StixMetaObject
  created: DateTime
  modified: DateTime
  # Vocabulary
  category: VocabularyDefinition!
  name: String!
  description: String
  usages: Int!
  aliases: [String!]
  builtIn: Boolean
  order: Int
}

# Ordering
enum VocabularyOrdering {
  name
  category
  description
  order
  _score
}

# Relay connections
type VocabularyConnection {
  pageInfo: PageInfo!
  edges: [VocabularyEdge!]!
}
type VocabularyEdge {
  cursor: String!
  node: Vocabulary!
}

# Queries
type Query {
  vocabulary(id: String!): Vocabulary @auth(for: [KNOWLEDGE, SETTINGS_SETACCESSES, SETTINGS_SETLABELS])
  vocabularyCategories: [VocabularyDefinition!]! @auth
  vocabularies(
    category: VocabularyCategory
    first: Int
    after: ID
    orderBy: VocabularyOrdering
    orderMode: OrderingMode
    filters: FilterGroup
    search: String
  ): VocabularyConnection @auth(for: [KNOWLEDGE, SETTINGS_SETACCESSES, SETTINGS_SETLABELS, INGESTION_SETINGESTIONS, INVESTIGATION_INUPDATE])
}

# Mutations
input VocabularyAddInput {
  stix_id: StixId
  x_opencti_stix_ids: [StixId]
  name: String! @constraint(minLength: 1, format: "not-blank")
  description: String
  category: VocabularyCategory!
  order: Int
  created: DateTime
  modified: DateTime
  aliases: [String!]
  update: Boolean
}

type Mutation {
  vocabularyAdd(input: VocabularyAddInput!): Vocabulary @auth(for: [SETTINGS_SETLABELS])
  vocabularyFieldPatch(id: ID!, input: [EditInput!]!): Vocabulary @auth(for: [SETTINGS_SETLABELS])
  vocabularyDelete(id: ID!): ID @auth(for: [SETTINGS_SETLABELS])
}
