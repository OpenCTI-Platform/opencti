import type { AttributeDefinition } from '../../schema/attribute-definition';
import { ENTITY_TYPE_CONTAINER } from '../../schema/general';
import { schemaAttributesDefinition } from '../../schema/schema-attributes';

const containerAttributes: Array<AttributeDefinition> = [
  { name: 'templates',
    label: 'Templates',
    type: 'object',
    format: 'standard',
    editDefault: false,
    mandatoryType: 'no',
    multiple: true,
    upsert: false,
    isFilterable: false,
    mappings: [
      { name: 'id', label: 'Template ID', type: 'string', format: 'short', editDefault: false, mandatoryType: 'internal', multiple: false, upsert: false, isFilterable: false },
      { name: 'name', label: 'Template name', type: 'string', format: 'short', editDefault: false, mandatoryType: 'internal', multiple: false, upsert: false, isFilterable: false },
      { name: 'description', label: 'Template description', type: 'string', format: 'text', editDefault: false, mandatoryType: 'no', multiple: false, upsert: false, isFilterable: false },
      { name: 'filters', label: 'Template filters', type: 'string', format: 'text', editDefault: false, mandatoryType: 'no', multiple: false, upsert: false, isFilterable: false },
      { name: 'content', label: 'Template description', type: 'string', format: 'text', editDefault: false, mandatoryType: 'internal', multiple: false, upsert: false, isFilterable: false },
      { name: 'template_widgets_names', label: 'Template widgets names', type: 'string', format: 'short', editDefault: false, mandatoryType: 'internal', multiple: true, upsert: false, isFilterable: false },
    ] },
  { name: 'templateAndUtils',
    label: 'Template and utils',
    type: 'object',
    format: 'standard',
    editDefault: false,
    mandatoryType: 'no',
    multiple: false,
    upsert: false,
    isFilterable: false,
    mappings: [
      { name: 'template',
        label: 'Template',
        type: 'object',
        format: 'standard',
        editDefault: false,
        mandatoryType: 'internal',
        multiple: false,
        upsert: false,
        isFilterable: false,
        mappings: [
          { name: 'id', label: 'Template ID', type: 'string', format: 'short', editDefault: false, mandatoryType: 'internal', multiple: false, upsert: false, isFilterable: false },
          { name: 'name', label: 'Template name', type: 'string', format: 'short', editDefault: false, mandatoryType: 'internal', multiple: false, upsert: false, isFilterable: false },
          { name: 'description', label: 'Template description', type: 'string', format: 'text', editDefault: false, mandatoryType: 'no', multiple: false, upsert: false, isFilterable: false },
          { name: 'filters', label: 'Template filters', type: 'string', format: 'text', editDefault: false, mandatoryType: 'no', multiple: false, upsert: false, isFilterable: false },
          { name: 'content', label: 'Template description', type: 'string', format: 'text', editDefault: false, mandatoryType: 'internal', multiple: false, upsert: false, isFilterable: false },
          { name: 'template_widgets_names', label: 'Template widgets names', type: 'string', format: 'short', editDefault: false, mandatoryType: 'internal', multiple: true, upsert: false, isFilterable: false },
        ] },
      { name: 'template_widgets',
        label: 'Template',
        type: 'object',
        format: 'standard',
        editDefault: false,
        mandatoryType: 'internal',
        multiple: true,
        upsert: false,
        isFilterable: false,
        mappings: [
          { name: 'name', label: 'Template widget name', type: 'string', format: 'short', editDefault: false, mandatoryType: 'internal', multiple: false, upsert: false, isFilterable: false },
          { name: 'description', label: 'Template widget description', type: 'string', format: 'text', editDefault: false, mandatoryType: 'no', multiple: false, upsert: false, isFilterable: false },
          { name: 'widget', label: 'Widget', type: 'object', format: 'flat', editDefault: false, mandatoryType: 'internal', multiple: false, upsert: false, isFilterable: false },
        ]
      },
    ] },
];
schemaAttributesDefinition.registerAttributes(ENTITY_TYPE_CONTAINER, containerAttributes);
