type SecurityAssessment implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  representative: Representative!
  x_opencti_stix_ids: [StixId]
  is_inferred: Boolean!
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  draftVersion: DraftVersion
  # inferences
  x_opencti_inferences: [Inference]
  # StixCoreObject
  createdBy: Identity
  numberOfConnectedElement: Int!
  objectMarking: [MarkingDefinition!]
  objectOrganization: [Organization!]
  objectLabel: [Label!]
  externalReferences(first: Int): ExternalReferenceConnection
  containersNumber: Number
  containers(first: Int, entityTypes: [String!]): ContainerConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  observedData(first: Int): ObservedDataConnection
  groupings(first: Int): GroupingConnection
  cases(first: Int): CaseConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: StixRef
    toId: StixRef
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: FilterGroup
  ): StixCoreRelationshipConnection
  stixCoreObjectsDistribution(
    relationship_type: [String]
    toTypes: [String]
    field: String!
    startDate: DateTime
    endDate: DateTime
    dateAttribute: String
    operation: StatsOperation!
    limit: Int
    order: String
    types: [String]
    filters: FilterGroup
    search: String
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  stixCoreRelationshipsDistribution(
    field: String!
    operation: StatsOperation!
    startDate: DateTime
    endDate: DateTime
    dateAttribute: String
    isTo: Boolean
    limit: Int
    order: String
    elementWithTargetTypes: [String]
    fromId: [String]
    fromRole: String
    fromTypes: [String]
    toId: [String]
    toRole: String
    toTypes: [String]
    relationship_type: [String]
    confidences: [Int]
    search: String
    filters: FilterGroup
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  opinions_metrics: OpinionsMetrics
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  x_opencti_graph_data: String
  objectAssignee: [Assignee!]
  objectParticipant: [Participant!]
  avatar: OpenCtiFile
  # Identity
  identity_class: String!
  name: String!
  description: String
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  x_opencti_reliability: String
  # SecurityAssessment
  security_platform_type: String
  # Technical
  creators: [Creator!]
  toStix: String
  importFiles(
    first: Int
    prefixMimeType: String
    after: ID
    orderBy: FileOrdering
    orderMode: OrderingMode
    search: String
    filters: FilterGroup
  ): FileConnection
  pendingFiles(
    first: Int
    after: ID
    orderBy: FileOrdering
    orderMode: OrderingMode
    search: String
    filters: FilterGroup
  ): FileConnection
  exportFiles(first: Int): FileConnection
  editContext: [EditUserContext!]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
  status: Status
  workflowEnabled: Boolean
  # SecurityAssessment
  objectAssess: StixAssessmentObject
  toStixBundle: String
}

# Ordering
enum SecurityAssessmentOrdering {
  name
  confidence
  created
  created_at
  modified
  updated_at
  _score
}

# Relay connections
type SecurityAssessmentConnection {
  pageInfo: PageInfo!
  edges: [SecurityAssessmentEdge!]!
}
type SecurityAssessmentEdge {
  cursor: String!
  node: SecurityAssessment!
}

# Queries
type Query {
  securityAssessment(id: String!): SecurityAssessment @auth(for: [KNOWLEDGE])
  securityAssessments(
    first: Int
    after: ID
    orderBy: SecurityAssessmentOrdering
    orderMode: OrderingMode
    filters: FilterGroup
    search: String
    toStix: Boolean
  ): SecurityAssessmentConnection @auth(for: [KNOWLEDGE])
}

# Mutations
input SecurityAssessmentAddInput {
  name: String! @constraint(minLength: 2, format: "not-blank")
  description: String
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  objectAssess: String!
  created: DateTime
  modified: DateTime
  revoked: Boolean
  # inherited, used by client python
  stix_id: StixId
  x_opencti_stix_ids: [StixId]
  x_opencti_workflow_id: String
  externalReferences: [String]
  update: Boolean
}

type Mutation {
  securityAssessmentAdd(input: SecurityAssessmentAddInput!): SecurityAssessment @auth(for: [KNOWLEDGE_KNUPDATE])
  securityAssessmentDelete(id: ID!): ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  securityAssessmentFieldPatch(id: ID!, input: [EditInput]!, commitMessage: String, references: [String]): SecurityAssessment @auth(for: [KNOWLEDGE_KNUPDATE])
  securityAssessmentContextPatch(id: ID!, input: EditContext!): SecurityAssessment @auth(for: [KNOWLEDGE_KNUPDATE])
  securityAssessmentContextClean(id: ID!): SecurityAssessment @auth(for: [KNOWLEDGE_KNUPDATE])
  securityAssessmentRelationAdd(id: ID!, input: StixRefRelationshipAddInput!): StixRefRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  securityAssessmentRelationDelete(id: ID!, toId: StixRef!, relationship_type: String!): SecurityAssessment @auth(for: [KNOWLEDGE_KNUPDATE])
}

