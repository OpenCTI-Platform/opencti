type ExclusionList implements InternalObject & BasicObject {
  id: ID!
  name: String!
  description: String
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  created_at: DateTime!
  enabled: Boolean!
  exclusion_list_entity_types: [String!]!
  file_id: String!
}

type ExclusionListConnection {
  pageInfo: PageInfo!
  edges: [ExclusionListEdge!]
}

type ExclusionListEdge {
  cursor: String!
  node: ExclusionList!
}

enum ExclusionListOrdering {
  name
  created_at
  enabled
  _score
}

input ExclusionListContentAddInput {
  name: String!
  description: String
  exclusion_list_entity_types: [String!]!
  content: String!
}

input ExclusionListFileAddInput {
  name: String!
  description: String
  exclusion_list_entity_types: [String!]!
  file: Upload!
}

type Query {
  exclusionList(id: String!): ExclusionList @auth(for: [SETTINGS_SETCUSTOMIZATION])
  exclusionLists(
    first: Int
    after: ID
    orderBy: ExclusionListOrdering
    orderMode: OrderingMode
    filters: FilterGroup
    search: String
  ): ExclusionListConnection @auth(for: [SETTINGS_SETCUSTOMIZATION])
}

type Mutation {
  exclusionListContentAdd(input: ExclusionListContentAddInput!): ExclusionList @auth(for: [SETTINGS_SETCUSTOMIZATION])
  exclusionListFileAdd(input: ExclusionListFileAddInput!): ExclusionList @auth(for: [SETTINGS_SETCUSTOMIZATION])
  exclusionListFieldPatch(id: ID!, input: [EditInput!], file: Upload): ExclusionList @auth(for: [SETTINGS_SETCUSTOMIZATION])
  exclusionListDelete(id: ID!): ID @auth(for: [SETTINGS_SETCUSTOMIZATION])
}