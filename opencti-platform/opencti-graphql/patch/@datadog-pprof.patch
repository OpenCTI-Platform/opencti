diff --git a/out/src/heap-profiler-bindings.js b/out/src/heap-profiler-bindings.js
index 5117b0d3ed460a4c7de6b08fa487403eb2ed4655..ad05bbc9f4fc82f846f3fbd4161a6fe7037c5677 100644
--- a/out/src/heap-profiler-bindings.js
+++ b/out/src/heap-profiler-bindings.js
@@ -54,7 +54,7 @@ exports.getAllocationProfile = getAllocationProfile;
 exports.monitorOutOfMemory = monitorOutOfMemory;
 const path = __importStar(require("path"));
 const findBinding = require('node-gyp-build');
-const profiler = findBinding(path.join(__dirname, '..', '..'));
+const profiler = findBinding(path.join(__dirname, '..', 'build'));
 // Wrappers around native heap profiler functions.
 function startSamplingHeapProfiler(heapIntervalBytes, heapStackDepth) {
     profiler.heapProfiler.startSamplingHeapProfiler(heapIntervalBytes, heapStackDepth);
diff --git a/out/src/time-profiler-bindings.js b/out/src/time-profiler-bindings.js
index d6d3f2348b799c6f7d5b1aad6ed66551e95377b4..fe005621a23327a69ce9ce5dd8874a01b19dbcc7 100644
--- a/out/src/time-profiler-bindings.js
+++ b/out/src/time-profiler-bindings.js
@@ -18,7 +18,7 @@ exports.getNativeThreadId = exports.constants = exports.TimeProfiler = void 0;
  */
 const path_1 = require("path");
 const findBinding = require('node-gyp-build');
-const profiler = findBinding((0, path_1.join)(__dirname, '..', '..'));
+const profiler = findBinding((0, path_1.join)(__dirname, '..', 'build'));
 exports.TimeProfiler = profiler.TimeProfiler;
 exports.constants = profiler.constants;
 exports.getNativeThreadId = profiler.getNativeThreadId;
