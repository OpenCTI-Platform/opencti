import React from 'react';
import { Route, Routes, useLocation } from 'react-router-dom';
import { graphql, useFragment } from 'react-relay';
import useAuth from '../../../../utils/hooks/useAuth';
import { getRelationshipTypesForEntityType } from '../../../../utils/Relation';
import EntityStixCoreRelationships from '../../common/stix_core_relationships/EntityStixCoreRelationships';
import StixDomainObjectKnowledge from '../../common/stix_domain_objects/StixDomainObjectKnowledge';
import StixCoreRelationship from '../../common/stix_core_relationships/StixCoreRelationship';
import StixDomainObjectAuthorKnowledge from '../../common/stix_domain_objects/StixDomainObjectAuthorKnowledge';
import StixSightingRelationship from '../../events/stix_sighting_relationships/StixSightingRelationship';

const organizationKnowledgeFragment = graphql`
  fragment OrganizationKnowledge_organization on Organization {
    id
    name
    x_opencti_aliases
    entity_type
  }
`;

const OrganizationKnowledgeComponent = ({
  organizationData,
  viewAs,
}) => {
  const organization = useFragment(
    organizationKnowledgeFragment,
    organizationData,
  );
  const location = useLocation();
  const link = `/dashboard/entities/organizations/${organization.id}/knowledge`;
  const { schema } = useAuth();
  const allRelationshipsTypes = getRelationshipTypesForEntityType(organization.entity_type, schema);
  return (
    <Routes>
      <Route
        path="/relations/:relationId/*"
        element={
          <StixCoreRelationship
            entityId={organization.id}
            paddingRight={true}
          />
          }
      />
      <Route
        path="/sightings/:sightingId"
        element={
          <StixSightingRelationship
            entityId={organization.id}
            paddingRight={true}
          />
          }
      />
      <Route
        path="/overview"
        element={(viewAs === 'knowledge' ? (
          <StixDomainObjectKnowledge
            stixDomainObjectId={organization.id}
            stixDomainObjectType="Organization"
          />
        ) : (
          <StixDomainObjectAuthorKnowledge
            stixDomainObjectId={organization.id}
            stixDomainObjectType="Organization"
          />
        ))
            }
      />
      <Route
        path="/all"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={allRelationshipsTypes}
            entityLink={link}
            defaultStartTime={organization.startTime}
            defaultStopTime={organization.stopTime}
            allDirections
          />
          }
      />
      <Route
        path="/threats"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['targets']}
            isRelationReversed
            entityLink={link}
            stixCoreObjectTypes={[
              'Attack-Pattern',
              'Threat-Actor',
              'Intrusion-Set',
              'Campaign',
              'Incident',
              'Malware',
              'Tool',
            ]}
          />
          }
      />
      <Route
        path="/related"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['related-to']}
            entityLink={link}
            allDirections={true}
          />
          }
      />
      <Route
        path="/organizations"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['part-of', 'derived-from']}
            role="part-of_to"
            stixCoreObjectTypes={['Organization']}
            entityLink={link}
            isRelationReversed={false}
          />
          }
      />
      <Route
        path="/individuals"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['part-of']}
            stixCoreObjectTypes={['Individual']}
            entityLink={link}
            isRelationReversed={true}
          />
          }
      />
      <Route
        path="/locations"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['located-at']}
            stixCoreObjectTypes={['Location']}
            entityLink={link}
            isRelationReversed={false}
          />
          }
      />
      <Route
        path="/sectors"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['part-of']}
            stixCoreObjectTypes={['Sector']}
            entityLink={link}
            isRelationReversed={false}
          />
          }
      />
      <Route
        path="/used_tools"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['uses']}
            stixCoreObjectTypes={['Tool']}
            entityLink={link}
            isRelationReversed={false}
          />
          }
      />
      <Route
        path="/threat_actors"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['targets', 'employed-by']}
            stixCoreObjectTypes={['Threat-Actor']}
            entityLink={link}
            isRelationReversed={true}
          />
          }
      />
      <Route
        path="/intrusion_sets"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['targets']}
            stixCoreObjectTypes={['Intrusion-Set']}
            entityLink={link}
            isRelationReversed={true}
          />
          }
      />
      <Route
        path="/campaigns"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['targets']}
            stixCoreObjectTypes={['Campaign']}
            entityLink={link}
            isRelationReversed={true}
          />
          }
      />
      <Route
        path="/incidents"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['targets']}
            stixCoreObjectTypes={['Incident']}
            entityLink={link}
            isRelationReversed={true}
          />
          }
      />
      <Route
        path="/malwares"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['targets']}
            stixCoreObjectTypes={['Malware']}
            entityLink={link}
            isRelationReversed={true}
          />
          }
      />
      <Route
        path="/attack_patterns"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['targets']}
            stixCoreObjectTypes={['Attack-Pattern']}
            entityLink={link}
            isRelationReversed={true}
          />
          }
      />
      <Route
        path="/tools"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['targets']}
            stixCoreObjectTypes={['Tool']}
            entityLink={link}
            isRelationReversed={true}
          />
          }
      />
      <Route
        path="/vulnerabilities"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['related-to']}
            stixCoreObjectTypes={['Vulnerability']}
            entityLink={link}
            allDirections={true}
          />
          }
      />
      <Route
        path="/observables"
        element={
          <EntityStixCoreRelationships
            key={location.pathname}
            entityId={organization.id}
            relationshipTypes={['related-to']}
            stixCoreObjectTypes={['Stix-Cyber-Observable']}
            entityLink={link}
            allDirections={true}
            isRelationReversed={true}
          />
          }
      />
    </Routes>
  );
};

export default OrganizationKnowledgeComponent;
